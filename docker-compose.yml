version: "2.4"

services:
  sqlServer:
    container_name: sqlserver
    user: root
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "password123"
      ACCEPT_EULA: "Y"
    volumes:
      - sqlvolume:/var/opt/mssql
    ports:
      - "1433:1433"
    networks:
      - template
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P password123 -Q "SELECT 1" || exit 1
      interval: 5s
      timeout: 3s
      retries: 10

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 3s
      timeout: 2s
      retries: 20
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - template

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.1.1
    ports:
      - 5601:5601
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
    networks:
      - template
    depends_on:
      elasticsearch:
        condition: service_healthy
        
  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - template
    volumes:
      - rabbitvolume:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 3s
      timeout: 2s
      retries: 20
networks:
  template:
    driver: bridge
volumes:
  rabbitvolume:
  sqlvolume:
  esdata:
